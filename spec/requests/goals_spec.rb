require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe '/goals', type: :request do
  # This should return the minimal set of attributes required to create a valid
  # Goal. As you add validations to Goal, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) do
    user = User.create(sub: 'google-oauth2|108940937413760665889', name: 'Sergio', given_name: 'Sergio', family_name: 'Cortes',
                       picture: 'https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg',
                       email: 'test3@gmail.com')
    { sub: user.sub, coin_id: 1, goal: 1 }
  end

  let(:invalid_attributes) do
    User.create(sub: 'google-oauth2|108940937413760665889', name: 'Sergio', given_name: 'Sergio', family_name: 'Cortes',
                picture: 'https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg',
                email: 'test3@gmail.com')
    { sub: '1', coin_id: 1, goal: 1 }
  end

  # This should return the minimal set of values that should be in the headers
  # in order to pass any filters (e.g. authentication) defined in
  # GoalsController, or in your router and rack
  # middleware. Be sure to keep this updated too.
  let(:valid_headers) do
    {
      'Content-Type': 'application/json',
      authorization: 'Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImtBWG50ekZ6QWlOM2RZek9aOU1xcSJ9.eyJpc3MiOiJodHRwczovL2Rldi03cGhjY2
      staC51cy5hdXRoMC5jb20vIiwic3ViIjoic04zaHBvamQ1VnJIRUc3VmxhS2drWVRKYzg0T0JXd1ZAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vdHJhY2tlci1hcGkvIiwiaWF0
      IjoxNjMwNTE3OTc3LCJ
      leHAiOjE2MzA2MDQzNzcsImF6cCI6InNOM2hwb2pkNVZySEVHN1ZsYUtna1lUSmM4NE9CV3dWIiwiZ3R5IjoiY2xpZW50LWNyZWRlbnRpYWxzIn0.PGtU_CbEZdoYtRLBuDE_
      Mz_AEZtOMPMYXV5QcvOF
      f-G4jbHgwHOpaCOutjve2Wdco5LoVA-2RWbUatUEMM4lCzxnX9HTLvJvSo41084Hhb6q8cNp0NPWyzQelH7u9DCBbuBm5kcxp0UwrfwkA47ilQaPXnu4b1oPadcyu1C86IB6lp
      XpVQgKTUW
      xBmx-Y-R_CHZfbpQ7abw4EJYB9gdiX385tctBa2rshRAFY3B7prLtHX4fjSXl1mPj8sJLmm9V9vqNk8Zf0JgJx-5LKb4WF8Up7Nw6o86QIcznxU6n_ZQ55E1VS52zUL6t4ndor
      T_4fQrUyGEUgNt2
      IJ_FNsDpxg'
    }
  end

  describe 'GET /index' do
    it 'renders a successful response' do
      Goal.create! valid_attributes
      get goals_url, headers: valid_headers, as: :json
      expect(response).to be_successful
    end
  end

  describe 'GET /show' do
    it 'renders a successful response' do
      goal = Goal.create! valid_attributes
      get goal_url(goal), as: :json
      expect(response).to be_successful
    end
  end
end
